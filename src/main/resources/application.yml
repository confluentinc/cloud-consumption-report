confluent:
  cloud:
    organization: ${ORG_NAME:""}
    apiKey: ${METRICS_API_KEY}
    apiSecret: ${METRICS_API_SECRET}
    cloudEndPoints:
      environmentList: https://api.confluent.cloud/org/v2/environments?page_size=100
      clusterList: https://api.confluent.cloud/cmk/v2/clusters?environment=%s&page_size=100
    metrics:
      endpoint: https://api.telemetry.confluent.cloud/v2/metrics/cloud/query
      definitions:
        - name: "io.confluent.kafka.server/received_bytes"
          transformation: BYTES_TO_MB_PER_SEC
          metricsLimit: "Ingress (Mb/s)"
          category: Utilization
        - name: "io.confluent.kafka.server/sent_bytes"
          transformation: BYTES_TO_MB_PER_SEC
          metricsLimit: "Egress (Mb/s)"
          category: Utilization
        - name: "io.confluent.kafka.server/retained_bytes"
          transformation: BYTES_TO_GB
          metricsLimit: "Storage (Gb)"
          category: Storage
        - name: "io.confluent.kafka.server/active_connection_count"
          metricsLimit: "Client connections (Count)"
          category: Utilization
        - name: "io.confluent.kafka.server/partition_count"
          metricsLimit: "Partitions (Count)"
          category: Utilization
        - name: "io.confluent.kafka.server/cluster_load_percent"
          type: PERCENT
          metricsLimit: "Cluster Load (%)"
          category: Utilization
    reporting:
      refreshData: true
      outputDir: ${OUTPUT_DIR}/
      tmpDir: ${TMP_DIR:/tmp}/confluent/
      limitsFileLocation: classpath:static/CloudLimits.csv
      confluentLogo: classpath:static/ConfluentLogo.jpeg
      reportList:
        - beanName: jasperPDFGenerator
          isEnabled: ${GENERATE_PDF:true}
          args:
            jasperReportList: MetricsReport,ClusterReport,ClusterUtilization,OrganizationReport,ClusterStorageGrowth
            mainReportList: OrganizationReport
        - beanName: sqlCSVGenerator
          isEnabled: ${GENERATE_CSV:true}
          args:
            sqlFileList: OrganizationReport

resilience4j:
  ratelimiter:
    instances:
      metrics_rpm_limiter:
        limitForPeriod: 48
        limitRefreshPeriod: 1m
        timeoutDuration: 1m

spring:
  datasource:
    url: jdbc:hsqldb:mem:testdb
  jpa:
    hibernate:
      generate-ddl: true
      ddl-auto: update

